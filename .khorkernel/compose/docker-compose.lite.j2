# Khora Kernel - Lightweight Docker Compose Configuration 
# For laptop development with minimal resources
# Used when --profile=lite flag is passed to docker compose
version: '3.8'

services:
  # --- API Service (Lite Configuration) ---
  api:
    build:
      context: {{ (paths.api_dir | default('src/app/api')).replace('\\', '/') }}
      dockerfile: Dockerfile
    image: "{{ project }}-api:local"
    container_name: "{{ project }}-api-lite"
    ports:
      - "{{ ports.http }}:{{ ports.http }}"
    environment:
      - PORT={{ ports.http }}
      - ENVIRONMENT=development
      # Simplified development settings
{% if features.database == 'postgres' %}
      # For lite-mode, use SQLite instead of Postgres to reduce resource usage
      - DATABASE_URL=sqlite:////app/data/lite.db
{% elif features.database == 'sqlite' %}
      - DATABASE_URL=sqlite:////app/data/lite.db
{% endif %}
{% if features.broker == 'redis' %}
      # In lite mode, use memory or filesystem instead of Redis
      - USE_IN_MEMORY_QUEUE=true
{% endif %}
      # Disable observability for lite mode
      - OTEL_SDK_DISABLED=true
    volumes:
      - ./{{ (paths.api_dir | default('src/app/api')).replace('\\', '/') }}:/app
      - lite-data:/app/data
    networks:
      - lite_net
    profiles: [lite]

  # --- Worker Service (Lite Configuration, if needed) ---
  worker:
    build:
      context: {{ (paths.worker_dir | default('src/app/worker')).replace('\\', '/') }}
      dockerfile: Dockerfile
    image: "{{ project }}-worker:local"
    container_name: "{{ project }}-worker-lite"
    environment:
      - ENVIRONMENT=development
{% if features.database == 'postgres' %}
      # For lite-mode, use SQLite instead of Postgres
      - DATABASE_URL=sqlite:////app/data/lite.db
{% elif features.database == 'sqlite' %}
      - DATABASE_URL=sqlite:////app/data/lite.db
{% endif %}
{% if features.broker == 'redis' %}
      # In lite mode, use memory or filesystem instead of Redis
      - USE_IN_MEMORY_QUEUE=true
{% endif %}
      # Disable observability for lite mode
      - OTEL_SDK_DISABLED=true
    volumes:
      - ./{{ (paths.worker_dir | default('src/app/worker')).replace('\\', '/') }}:/app
      - lite-data:/app/data
    networks:
      - lite_net
    profiles: [lite]

# --- Volumes ---
volumes:
  lite-data: # Shared volume for SQLite database and other local data

# --- Networks ---
networks:
  lite_net:
    driver: bridge